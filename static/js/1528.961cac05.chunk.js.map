{"version":3,"file":"static/js/1528.961cac05.chunk.js","mappings":"6QACA,EAA8B,8B,8BCuB9B,EAjB0C,SAAHA,GAAsC,IAAhCC,EAAcD,EAAdC,eAAmBC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAYjE,OAXAC,EAAAA,EAAAA,YAAU,WAC+B,IAAjCH,EAAMI,wBAAiCJ,EAAMK,sBAC7CC,YAAW,WACPN,EAAMO,yBAAwB,GAC9BD,YAAW,WACPP,GACJ,GAAGS,EAAAA,EAASC,mBAChB,GAAGD,EAAAA,EAASE,eAEpB,GAAG,CAACV,EAAMI,uBAAwBJ,EAAMK,wBAGpCM,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,IAAKC,EAAmBC,IAAI,YAAYC,UAAWC,GAEtE,E,oBCJA,GAAeC,EAAAA,EAAAA,KAZS,SAACC,GAAmB,MAAM,CAC9Cf,uBAAwBe,EAAMC,MAAMhB,uBACpCC,qBAAsBc,EAAMC,MAAMf,qBACrC,GASuC,CAAEN,eAAAA,EAAAA,GAAgBQ,wBAAAA,EAAAA,IAA1D,CAAqFc,E,kECgBrF,KAAeH,EAAAA,EAAAA,KAvBS,SAACC,EAAqBG,GAA2B,MAAM,CAC3ET,IAAKS,EAAST,IACdE,IAAKO,EAASP,IACdC,UAAWM,EAASN,UACvB,GAmBuC,CAAEO,6BAAAA,EAAAA,IAA1C,EAX4C,SAAHzB,GAAmF,IAA7Ee,EAAGf,EAAHe,IAAGW,EAAA1B,EAAEiB,IAAAA,OAAG,IAAAS,EAAG,MAAKA,EAAAC,EAAA3B,EAAEkB,UAAAA,OAAS,IAAAS,OAAGC,EAASD,EAAEF,EAA4BzB,EAA5ByB,6BAMpF,OAJApB,EAAAA,EAAAA,YAAU,WACNoB,EAA6B,WACjC,GAAG,KAGCZ,EAAAA,EAAAA,KAAA,OAAKE,IAAKA,EAAKE,IAAKA,EAAKC,UAAWA,EAAWW,OAAQ,kBAAMJ,EAA6B,YAAY,GAE9G,G","sources":["webpack://math_rpg/./src/components/main/gameOver/gameOver.module.scss?4d00","components/main/gameOver/gameOver.tsx","components/main/gameOver/gameOverContainer.tsx","components/renderImg.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gameOverImg\":\"gameOver_gameOverImg__aGMX0\"};","import gameOverScreenImg from '@assets/imgs/gameOverScreenImg.png'\r\nimport settings from 'settings'\r\nimport { useEffect } from 'react'\r\nimport { GameOverProps } from './gameOverContainer'\r\nimport RenderImg from 'components/renderImg'\r\nimport s from './gameOver.module.scss'\r\n\r\nconst GameOver: React.FC<GameOverProps> = ({ initializeGame, ...props }) => {\r\n    useEffect(() => {\r\n        if (props.unloadedImagesQuantity === 0 && !props.currentSceneDidMount) {\r\n            setTimeout(() => {\r\n                props.setCurrentSceneDidMount(true)\r\n                setTimeout(() => {\r\n                    initializeGame()\r\n                }, settings.gameOverScreenTime)\r\n            }, settings.delayForScenes)\r\n        }\r\n    }, [props.unloadedImagesQuantity, props.currentSceneDidMount])\r\n\r\n    return (\r\n        <RenderImg src={gameOverScreenImg} alt=\"Game over\" className={s.gameOverImg} />\r\n    )\r\n}\r\n\r\nexport default GameOver","import { connect } from \"react-redux\"\r\nimport GameOver from \"./gameOver\"\r\nimport { initializeGame } from \"@redux/gameReducer\"\r\nimport { setCurrentSceneDidMount } from \"@redux/sceneReducer\"\r\nimport { AppStateType } from \"@redux/store\"\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    unloadedImagesQuantity: state.scene.unloadedImagesQuantity,\r\n    currentSceneDidMount: state.scene.currentSceneDidMount,\r\n})\r\n\r\ntype DispatchPropsType = {\r\n    initializeGame: () => void\r\n    setCurrentSceneDidMount: (didMount: boolean) => void\r\n}\r\n\r\nexport type GameOverProps = DispatchPropsType & ReturnType<typeof mapStateToProps>\r\n\r\nexport default connect(mapStateToProps, { initializeGame, setCurrentSceneDidMount })(GameOver)","import { connect } from \"react-redux\"\r\nimport { changeUnloadedImagesQuantity } from \"@redux/sceneReducer\"\r\nimport { AppStateType } from \"@redux/store\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\ntype RenderImgOwnProps = {\r\n    src: string | undefined\r\n    alt?: string\r\n    className?: string\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType, ownProps: RenderImgOwnProps) => ({\r\n    src: ownProps.src,\r\n    alt: ownProps.alt,\r\n    className: ownProps.className\r\n})\r\n\r\ntype MapDispatchToProps = {\r\n    changeUnloadedImagesQuantity: (action: \"PLUS_ONE\" | \"MINUS_ONE\") => void\r\n}\r\n\r\ntype RenderImgProps = ReturnType<typeof mapStateToProps> & MapDispatchToProps\r\n\r\nconst RenderImg: React.FC<RenderImgProps> = ({ src, alt = 'img', className = undefined, changeUnloadedImagesQuantity }) => {\r\n\r\n    useEffect(() => {\r\n        changeUnloadedImagesQuantity(\"PLUS_ONE\")\r\n    }, [])\r\n\r\n    return (\r\n        <img src={src} alt={alt} className={className} onLoad={() => changeUnloadedImagesQuantity(\"MINUS_ONE\")} />\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, { changeUnloadedImagesQuantity })(RenderImg)"],"names":["_ref","initializeGame","props","_objectWithoutProperties","_excluded","useEffect","unloadedImagesQuantity","currentSceneDidMount","setTimeout","setCurrentSceneDidMount","settings","gameOverScreenTime","delayForScenes","_jsx","RenderImg","src","gameOverScreenImg","alt","className","s","connect","state","scene","GameOver","ownProps","changeUnloadedImagesQuantity","_ref$alt","_ref$className","undefined","onLoad"],"sourceRoot":""}