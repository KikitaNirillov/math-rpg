{"version":3,"file":"static/js/1528.fa654ba4.chunk.js","mappings":"mQACA,EAA8B,8B,8BCoB9B,EAd0C,SAAH,GAAsC,IAAhCA,EAAc,EAAdA,eAAmBC,GAAK,YAQjE,OAPAC,EAAAA,EAAAA,YAAU,WAKN,OAJAD,EAAME,yBAAwB,GAC9BC,YAAW,WACPJ,GACJ,GAAGK,EAAAA,IACI,kBAAMJ,EAAME,yBAAwB,EAAM,CACrD,GAAG,KAEC,SAAC,IAAS,CAACG,IAAKC,EAAmBC,IAAI,YAAYC,UAAWC,GAGtE,E,oBCPA,GAAeC,EAAAA,EAAAA,IAAQ,KAAM,CAAEX,eAAAA,EAAAA,GAAgBG,wBAAAA,EAAAA,IAA/C,CAAyES,E,kECsBzE,KAAeD,EAAAA,EAAAA,KAvBS,SAACE,EAAqBC,GAA2B,MAAM,CAC3ER,IAAKQ,EAASR,IACdE,IAAKM,EAASN,IACdC,UAAWK,EAASL,UACvB,GAmBuC,CAAEM,6BAAAA,EAAAA,IAA1C,EAX4C,SAAH,GAAmF,IAA7ET,EAAG,EAAHA,IAAI,EAAD,EAAEE,IAAAA,OAAG,MAAG,MAAK,MAAEC,UAAAA,OAAS,WAAGO,EAAS,EAAED,EAA4B,EAA5BA,6BAMpF,OAJAb,EAAAA,EAAAA,YAAU,WACNa,EAA6B,WACjC,GAAG,KAGC,gBAAKT,IAAKA,EAAKE,IAAKA,EAAKC,UAAWA,EAAWQ,OAAQ,kBAAMF,EAA6B,YAAY,GAE9G,G","sources":["webpack://rpg/./src/components/main/gameOver/gameOver.module.scss?4d00","components/main/gameOver/gameOver.tsx","components/main/gameOver/gameOverContainer.tsx","components/renderImg.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gameOverImg\":\"gameOver_gameOverImg__aGMX0\"};","import gameOverScreenImg from '@assets/imgs/gameOverScreenImg.png'\r\nimport { GameOverScreenTime } from 'settings'\r\nimport { useEffect } from 'react'\r\nimport { GameOverProps } from './gameOverContainer'\r\nimport RenderImg from 'components/renderImg'\r\nimport s from './gameOver.module.scss'\r\n\r\nconst GameOver: React.FC<GameOverProps> = ({ initializeGame, ...props }) => {\r\n    useEffect(() => {\r\n        props.setCurrentSceneDidMount(true)\r\n        setTimeout(() => {\r\n            initializeGame()\r\n        }, GameOverScreenTime)\r\n        return () => props.setCurrentSceneDidMount(false)\r\n    }, [])\r\n    return (\r\n        <RenderImg src={gameOverScreenImg} alt=\"Game over\" className={s.gameOverImg}/>\r\n        // <img src={gameOverScreenImg} alt=\"Game over\" style={{ height: '100%', width: '100%' }} />\r\n    )\r\n}\r\n\r\nexport default GameOver","import { connect } from \"react-redux\"\r\nimport GameOver from \"./gameOver\"\r\nimport { initializeGame } from \"@redux/gameReducer\"\r\nimport { setCurrentSceneDidMount } from \"@redux/sceneReducer\"\r\n\r\ntype DispatchPropsType = {\r\n    initializeGame: () => void\r\n    setCurrentSceneDidMount: (didMount: boolean) => void\r\n}\r\n\r\nexport type GameOverProps = DispatchPropsType\r\n\r\nexport default connect(null, { initializeGame, setCurrentSceneDidMount})(GameOver)","import { connect } from \"react-redux\"\r\nimport { changeUnloadedImagesQuantity } from \"@redux/sceneReducer\"\r\nimport { AppStateType } from \"@redux/store\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\ntype RenderImgOwnProps = {\r\n    src: string | undefined\r\n    alt?: string\r\n    className?: string\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType, ownProps: RenderImgOwnProps) => ({\r\n    src: ownProps.src,\r\n    alt: ownProps.alt,\r\n    className: ownProps.className\r\n})\r\n\r\ntype MapDispatchToProps = {\r\n    changeUnloadedImagesQuantity: (action: \"PLUS_ONE\" | \"MINUS_ONE\") => void\r\n}\r\n\r\ntype RenderImgProps = ReturnType<typeof mapStateToProps> & MapDispatchToProps\r\n\r\nconst RenderImg: React.FC<RenderImgProps> = ({ src, alt = 'img', className = undefined, changeUnloadedImagesQuantity }) => {\r\n\r\n    useEffect(() => {\r\n        changeUnloadedImagesQuantity(\"PLUS_ONE\")\r\n    }, [])\r\n\r\n    return (\r\n        <img src={src} alt={alt} className={className} onLoad={() => changeUnloadedImagesQuantity(\"MINUS_ONE\")} />\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, { changeUnloadedImagesQuantity })(RenderImg)"],"names":["initializeGame","props","useEffect","setCurrentSceneDidMount","setTimeout","GameOverScreenTime","src","gameOverScreenImg","alt","className","s","connect","GameOver","state","ownProps","changeUnloadedImagesQuantity","undefined","onLoad"],"sourceRoot":""}