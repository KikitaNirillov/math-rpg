{"version":3,"file":"static/js/410.1c9fa8bc.chunk.js","mappings":"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","sources":["webpack://rpg/./src/components/main/choosePlayer/choosePlayer.module.scss?c40f","components/main/choosePlayer/choosePlayer.tsx","components/main/choosePlayer/choosePlayerContainer.tsx","components/typeWriter/typeWriter.tsx","components/typeWriter/typeWriterTransparentBtn.tsx","../node_modules/use-sound/src/index.ts","../node_modules/use-sound/src/use-on-mount.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"choosePlayer\":\"choosePlayer_choosePlayer__2v5TK\",\"choosePlayer__scene\":\"choosePlayer_choosePlayer__scene__VUF1Y\",\"choosePlayer__scene_heroImg\":\"choosePlayer_choosePlayer__scene_heroImg__3EP2l\",\"choosePlayer__interface\":\"choosePlayer_choosePlayer__interface__XBwuu\",\"choosePlayer__interface_container\":\"choosePlayer_choosePlayer__interface_container__waWVK\",\"choosePlayer__interface_container_question\":\"choosePlayer_choosePlayer__interface_container_question__oh4m4\",\"choosePlayer__interface_container_answers\":\"choosePlayer_choosePlayer__interface_container_answers__Hoopb\",\"choosePlayer__interface_container_answers_button\":\"choosePlayer_choosePlayer__interface_container_answers_button__InNCo\"};","import { HeroName } from \"@base/heroes\"\r\nimport TypeWriter from \"components/typeWriter/typeWriter\"\r\nimport { useEffect, useState } from \"react\"\r\nimport settings from \"settings\"\r\nimport { ChoosePlayerProps } from \"./choosePlayerContainer\"\r\nimport s from './choosePlayer.module.scss'\r\nimport warriorImg from '@sprites/playerImgs/playerWarriorDefaultImg.gif'\r\nimport magicianImg from '@sprites/playerImgs/playerMagicianDefaultImg.gif'\r\nimport TypeWriterTransparentBtn from \"components/typeWriter/typeWriterTransparentBtn\"\r\n\r\nconst heroesImgs = {\r\n    warrior: warriorImg,\r\n    magician: magicianImg\r\n}\r\n\r\nconst ChoosePlayer: React.FC<ChoosePlayerProps> = (props) => {\r\n    const [textWasDisplayed, setTextWasDisplayed] = useState<boolean>(false)\r\n    const [focusHero, setFocusHero] = useState<HeroName | null>(null)\r\n    const [heroWasChosen, setHeroWasChosen] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        if (props.unloadedImagesQuantity === 0 && !props.currentSceneDidMount) {\r\n            setTimeout(() => {\r\n                props.setCurrentSceneDidMount(true)\r\n            }, settings.delayForScenes)\r\n        }\r\n    }, [props.unloadedImagesQuantity, props.currentSceneDidMount])\r\n\r\n    const сhooseHero = (hero: HeroName) => {\r\n        setHeroWasChosen(true)\r\n        props.setNewLocation()\r\n        props.chooseHero(hero)\r\n        props.setSceneWithTransition(\"Cutscene\")\r\n    }\r\n\r\n    return (\r\n        <div className={s.choosePlayer}>\r\n            <div className={s.choosePlayer__scene}>\r\n                {focusHero &&\r\n                    <img src={heroesImgs[focusHero]} alt={`${focusHero}Img`} className={s.choosePlayer__scene_heroImg} />\r\n                }\r\n            </div>\r\n            <div className={s.choosePlayer__interface}>\r\n                <TypeWriterTransparentBtn />\r\n                <div className={s.choosePlayer__interface_container}>\r\n                    <div className={s.choosePlayer__interface_container_question}>\r\n                        <TypeWriter\r\n                            text={'How do yo see yourself ?'}\r\n                            whatToDoAtTheEnd={() => setTextWasDisplayed(true)}\r\n                        />\r\n                    </div>\r\n                    {textWasDisplayed &&\r\n                        <div className={s.choosePlayer__interface_container_answers}>\r\n                            <button className={s.choosePlayer__interface_container_answers_button}\r\n                                onClick={() => сhooseHero('warrior')}\r\n                                onMouseOver={() => setFocusHero('warrior')}\r\n                                onMouseLeave={() => setFocusHero(heroWasChosen ? 'warrior' : null)}\r\n                            >\r\n                                <p>Warrior (easy difficulty)</p>\r\n                            </button>\r\n                            <button className={s.choosePlayer__interface_container_answers_button}\r\n                                onClick={() => сhooseHero('magician')}\r\n                                onMouseOver={() => setFocusHero('magician')}\r\n                                onMouseLeave={() => setFocusHero(heroWasChosen ? 'magician' : null)}\r\n                            >\r\n                                <p>Magician (hard difficulty)</p>\r\n                            </button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChoosePlayer","import { connect } from \"react-redux\"\r\nimport ChoosePlayer from \"./choosePlayer\"\r\nimport { chooseHero } from \"@redux/playerReducer\"\r\nimport { setSceneWithTransition, setCurrentSceneDidMount} from \"@redux/sceneReducer\"\r\nimport { setNewLocation } from \"@redux/locationReducer\"\r\nimport { SceneName } from \"scenes\"\r\nimport { HeroName } from \"base/heroes\"\r\nimport { AppStateType } from \"@redux/store\"\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    unloadedImagesQuantity: state.scene.unloadedImagesQuantity,\r\n    currentSceneDidMount: state.scene.currentSceneDidMount,\r\n})\r\n\r\ntype DispatchPropsType = {\r\n    chooseHero: (heroName: HeroName) => void\r\n    setSceneWithTransition: (scene: SceneName) => void\r\n    setCurrentSceneDidMount: (didMount: boolean) => void\r\n    setNewLocation: () => void\r\n}\r\n\r\nexport type ChoosePlayerProps = DispatchPropsType & ReturnType<typeof mapStateToProps>\r\n\r\nexport default connect(mapStateToProps, { chooseHero, setSceneWithTransition, setNewLocation, setCurrentSceneDidMount})(ChoosePlayer)","import { useEffect, useState } from \"react\"\r\nimport typewriterSound from '@assets/sounds/typewriterSound.mp3'\r\nimport useSound from \"use-sound\"\r\nimport { AppStateType } from \"@redux/store\"\r\nimport { setTypeWriterIsWriting, setTypeWriterStopped } from '@redux/gameReducer'\r\nimport { connect } from \"react-redux\"\r\n\r\nconst delayBeforeFirstSymbol = 300\r\nconst defaultDelayBeforeNextSymbol = 80\r\n\r\ntype TypeWriterOwnProps = {\r\n    text: string\r\n    whatToDoAtTheEnd?: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType, ownProps: TypeWriterOwnProps) => ({\r\n    ...ownProps,\r\n    typeWriterIsWriting: state.game.typeWriterIsWriting,\r\n    typeWriterStopped: state.game.typeWriterStopped,\r\n    opacity: state.scene.opacity,\r\n    soundValue: state.game.soundValue\r\n})\r\n\r\ntype MapDispatchToProps = {\r\n    setTypeWriterIsWriting: (isWriting: boolean) => void\r\n    setTypeWriterStopped: (wasStop: boolean) => void\r\n}\r\n\r\ntype TypeWriterProps = MapDispatchToProps & ReturnType<typeof mapStateToProps>\r\n\r\nconst TypeWriter: React.FC<TypeWriterProps> = ({ text, typeWriterStopped, opacity, soundValue, setTypeWriterStopped, setTypeWriterIsWriting, whatToDoAtTheEnd = () => { } }) => {\r\n    const [play, { stop }] = useSound(typewriterSound, { volume: soundValue === \"OFF\" ? 0 : 0.5 });\r\n    const [newText, setNewText] = useState<string>('')\r\n    const [letterNumber, setLetterNumber] = useState<number>(0)\r\n    const [firstSimbolDisplayed, setFirstSimbolDisplayed] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setTypeWriterStopped(false)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setTypeWriterStopped(false)\r\n        setLetterNumber(0)\r\n        setNewText('')\r\n        setFirstSimbolDisplayed(false)\r\n        setTypeWriterIsWriting(true)\r\n    }, [text])\r\n\r\n    useEffect(() => {\r\n        if (typeWriterStopped) {\r\n            setTypeWriterIsWriting(false)\r\n            whatToDoAtTheEnd()\r\n        }\r\n    }, [typeWriterStopped])\r\n\r\n    useEffect(() => {\r\n        if (!typeWriterStopped && opacity === 1) {\r\n            setTimeout(() => {\r\n                if (newText.length !== text.length) {\r\n                    setTimeout(() => {\r\n                        stop()\r\n                        if (!typeWriterStopped) play()\r\n                        setNewText(newText + text.charAt(letterNumber))\r\n                        setFirstSimbolDisplayed(true)\r\n                        setLetterNumber(letterNumber + 1)\r\n                    }, defaultDelayBeforeNextSymbol)\r\n                } else {\r\n                    setTypeWriterStopped(true)\r\n                }\r\n            }, firstSimbolDisplayed ? 0 : (delayBeforeFirstSymbol))\r\n        }\r\n    }, [newText, opacity])\r\n\r\n    return <p>\r\n        {typeWriterStopped ? text : newText}\r\n    </p>\r\n}\r\n\r\nexport default connect(mapStateToProps, { setTypeWriterIsWriting, setTypeWriterStopped })(TypeWriter)","import { setTypeWriterStopped } from '@redux/gameReducer'\r\nimport { AppStateType } from '@redux/store'\r\nimport { connect } from 'react-redux'\r\n\r\ntype MapDispatchToProps = {\r\n    setTypeWriterStopped: (isStop: boolean) => void\r\n}\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    typeWriterIsWriting: state.game.typeWriterIsWriting,\r\n})\r\n\r\ntype TypeWriterTransparentBtnProps = MapDispatchToProps & ReturnType<typeof mapStateToProps>\r\n\r\nconst TypeWriterTransparentBtn: React.FC<TypeWriterTransparentBtnProps> = ({ setTypeWriterStopped, typeWriterIsWriting }) => {\r\n    return (\r\n        <button className='transparentAbsoluteBtn'\r\n            style={{ display: `${typeWriterIsWriting ? 'initial' : 'none'}` }}\r\n            onClick={() => setTypeWriterStopped(true)} />\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, { setTypeWriterStopped })(TypeWriterTransparentBtn)","import React from 'react';\n\nimport useOnMount from './use-on-mount';\n\nimport { HookOptions, PlayOptions, PlayFunction, ReturnedValue } from './types';\n\nexport default function useSound<T = any>(\n  src: string | string[],\n  {\n    id,\n    volume = 1,\n    playbackRate = 1,\n    soundEnabled = true,\n    interrupt = false,\n    onload,\n    ...delegated\n  }: HookOptions<T> = {} as HookOptions\n) {\n  const HowlConstructor = React.useRef<HowlStatic | null>(null);\n  const isMounted = React.useRef(false);\n\n  const [duration, setDuration] = React.useState<number | null>(null);\n\n  const [sound, setSound] = React.useState<Howl | null>(null);\n\n  const handleLoad = function() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n\n    if (isMounted.current) {\n      // @ts-ignore\n      setDuration(this.duration() * 1000);\n    }\n\n    // @ts-ignore\n    setSound(this);\n  };\n\n  // We want to lazy-load Howler, since sounds can't play on load anyway.\n  useOnMount(() => {\n    import('howler').then(mod => {\n      if (!isMounted.current) {\n        // Depending on the module system used, `mod` might hold\n        // the export directly, or it might be under `default`.\n        HowlConstructor.current = mod.Howl ?? mod.default.Howl;\n\n        isMounted.current = true;\n\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          rate: playbackRate,\n          onload: handleLoad,\n          ...delegated,\n        });\n      }\n    });\n\n    return () => {\n      isMounted.current = false;\n    };\n  });\n\n  // When the `src` changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n  React.useEffect(() => {\n    if (HowlConstructor.current && sound) {\n      setSound(\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          onload: handleLoad,\n          ...delegated,\n        })\n      );\n    }\n    // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(src)]);\n\n  // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n  React.useEffect(() => {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    }\n    // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume, playbackRate]);\n\n  const play: PlayFunction = React.useCallback(\n    (options?: PlayOptions) => {\n      if (typeof options === 'undefined') {\n        options = {};\n      }\n\n      if (!sound || (!soundEnabled && !options.forceSoundEnabled)) {\n        return;\n      }\n\n      if (interrupt) {\n        sound.stop();\n      }\n\n      if (options.playbackRate) {\n        sound.rate(options.playbackRate);\n      }\n\n      sound.play(options.id);\n    },\n    [sound, soundEnabled, interrupt]\n  );\n\n  const stop = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.stop(id);\n    },\n    [sound]\n  );\n\n  const pause = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.pause(id);\n    },\n    [sound]\n  );\n\n  const returnedValue: ReturnedValue = [\n    play,\n    {\n      sound,\n      stop,\n      pause,\n      duration,\n    },\n  ];\n\n  return returnedValue;\n}\n\nexport { useSound };\n","import * as React from 'react';\n\nexport default function useOnMount(callback: React.EffectCallback) {\n  React.useEffect(callback, []);\n}\n"],"names":["heroesImgs","warrior","warriorImg","magician","magicianImg","props","_useState","useState","_useState2","_slicedToArray","textWasDisplayed","setTextWasDisplayed","_useState3","_useState4","focusHero","setFocusHero","_useState5","_useState6","heroWasChosen","setHeroWasChosen","useEffect","unloadedImagesQuantity","currentSceneDidMount","setTimeout","setCurrentSceneDidMount","settings","сhooseHero","hero","setNewLocation","chooseHero","setSceneWithTransition","_jsxs","className","s","children","_jsx","src","alt","concat","TypeWriterTransparentBtn","TypeWriter","text","whatToDoAtTheEnd","onClick","onMouseOver","onMouseLeave","connect","state","scene","ChoosePlayer","ownProps","_objectSpread","typeWriterIsWriting","game","typeWriterStopped","opacity","soundValue","setTypeWriterIsWriting","setTypeWriterStopped","_ref","_ref$whatToDoAtTheEnd","_useSound","useSound","typewriterSound","volume","_useSound2","play","stop","newText","setNewText","letterNumber","setLetterNumber","firstSimbolDisplayed","setFirstSimbolDisplayed","length","charAt","style","display","callback","_ref2$volume","_ref2","playbackRate","_ref2$playbackRate","soundEnabled","_ref2$soundEnabled","interrupt","_ref2$interrupt","onload","delegated","_objectWithoutPropertiesLoose","HowlConstructor","React__default","isMounted","duration","_React$useState","setDuration","sound","_React$useState2","setSound","handleLoad","call","this","current","then","mod","_mod$Howl","Howl","_extends","Array","isArray","rate","JSON","stringify","options","forceSoundEnabled","id","pause"],"sourceRoot":""}